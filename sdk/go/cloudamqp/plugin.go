// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package cloudamqp

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type Plugin struct {
	s *pulumi.ResourceState
}

// NewPlugin registers a new resource with the given unique name, arguments, and options.
func NewPlugin(ctx *pulumi.Context,
	name string, args *PluginArgs, opts ...pulumi.ResourceOpt) (*Plugin, error) {
	if args == nil || args.Enabled == nil {
		return nil, errors.New("missing required argument 'Enabled'")
	}
	if args == nil || args.InstanceId == nil {
		return nil, errors.New("missing required argument 'InstanceId'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["enabled"] = nil
		inputs["instanceId"] = nil
		inputs["name"] = nil
	} else {
		inputs["enabled"] = args.Enabled
		inputs["instanceId"] = args.InstanceId
		inputs["name"] = args.Name
	}
	s, err := ctx.RegisterResource("cloudamqp:index/plugin:Plugin", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Plugin{s: s}, nil
}

// GetPlugin gets an existing Plugin resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPlugin(ctx *pulumi.Context,
	name string, id pulumi.ID, state *PluginState, opts ...pulumi.ResourceOpt) (*Plugin, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["enabled"] = state.Enabled
		inputs["instanceId"] = state.InstanceId
		inputs["name"] = state.Name
	}
	s, err := ctx.ReadResource("cloudamqp:index/plugin:Plugin", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Plugin{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *Plugin) URN() pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *Plugin) ID() pulumi.IDOutput {
	return r.s.ID()
}

// If the plugin is enabled
func (r *Plugin) Enabled() pulumi.BoolOutput {
	return (pulumi.BoolOutput)(r.s.State["enabled"])
}

// Instance identifier
func (r *Plugin) InstanceId() pulumi.IntOutput {
	return (pulumi.IntOutput)(r.s.State["instanceId"])
}

// The name of the plugin
func (r *Plugin) Name() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["name"])
}

// Input properties used for looking up and filtering Plugin resources.
type PluginState struct {
	// If the plugin is enabled
	Enabled interface{}
	// Instance identifier
	InstanceId interface{}
	// The name of the plugin
	Name interface{}
}

// The set of arguments for constructing a Plugin resource.
type PluginArgs struct {
	// If the plugin is enabled
	Enabled interface{}
	// Instance identifier
	InstanceId interface{}
	// The name of the plugin
	Name interface{}
}
